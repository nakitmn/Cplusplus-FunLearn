//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
#include "Unit3.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TAuthorization *Authorization;
//---------------------------------------------------------------------------
__fastcall TAuthorization::TAuthorization(TComponent* Owner)
	: TForm(Owner)
{
}

void OpenRegistration(TForm * auth, TForm* reg){
	auth->Hide();
    reg->Show();
}

void SetMouseEnterDesign(TLabel * a){

}
//---------------------------------------------------------------------------
void __fastcall TAuthorization::RegistrationLabelClick(TObject *Sender)
{
    OpenRegistration(Authorization,Registration);
}
//---------------------------------------------------------------------------

void __fastcall TAuthorization::LoginEditKeyPress(TObject *Sender, System::WideChar &Key)

{
	if((Key>='a'&&Key<='z')||(Key>='A'&&Key<='Z')) return;
	if(isdigit(Key))return;
	if(Key==VK_BACK) return;
	if(Key==VK_RETURN){
        PasswordEdit->SetFocus();
	}
	Key=0;
}
//---------------------------------------------------------------------------

void __fastcall TAuthorization::RegistrationLabelMouseEnter(TObject *Sender)
{
	 SetMouseEnterDesign(RegistrationLabel);
}
//---------------------------------------------------------------------------

